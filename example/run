#!/bin/bash
# shellcheck disable=SC1090
source "$(dirname "$0")/../dev/include.sh" #follow

formats=(pgsql8)

function _help_post {
  echo "Valid formats: ${formats[*]}"
}

function build { # <file>: Generates a build of the given file
  info "Building $1..."
  cmd go run .. --xml "$1" "${@:2}"
}

function diff { # <old> <new>: Generates a diff of <old> to <new>
  info "Running diff $1 -> $2..."
  cmd go run .. --oldxml "$1" --newxml "$2" "${@:3}"
}

function extract { # <output> <conn args...>: Extracts the database at the given connection to the output file
  info "Extracting (${*:2}) to $1..."
  cmd go run .. --dbschemadump --outputfile "$1" "${@:2}"
}

function someapp-clean { #: Remove generated files 
  for format in "${format[@]}"; do
    someapp-clean-format "$format"
  done
}

function someapp-clean-format { # <format>: Remove generated files
  info "Cleaning dir $1"  
  cmd rm -f "$1"/*_{composite,extracted}.xml "$1"/*.sql
}

function someapp-build { # <format> [...args]: Generates a build of someapp v1
  build someapp_v1.xml --sqlformat="$1" --outputdir="$1" "${@:2}"
}

function someapp-diff { # <format> [...args]: Generates a diff of someapp v1 -> v2
  diff someapp_v1.xml someapp_v2.xml --sqlformat="$1" --outputdir="$1" "${@:2}"
}

function someapp-load-v1 { # <format>: Loads the v1 schema from someapp-build
  "$1"/run load-file someapp_v1_build.sql
}

function someapp-load-v2 { # <format>: Loads the v2 upgrade from someapp-diff
  "$1"/run load-stages someapp_v2
}

function someapp-extract { # <format> [...args]: Extracts the current someapp schema from the postgres db
  # delegate to $format/run so it can inject connection args
  # TODO(core) it looks like we're not respecting --outputdir when a relative --outputfile is passed??
  "$1"/run extract "$1"/someapp_extracted.xml --sqlformat="$1" --outputdir="$1" "${@:2}"
}

function someapp-diff-extract { # <format> [...args]: Diffs the extracted someapp schema against v2
  diff someapp_v2.xml "$1"/someapp_extracted.xml --sqlformat="$1" --outputdir="$1" "${@:2}"
}

function init-db { # <format>: Initializes the example database for the given format
  "$1"/run init-db
}

function reset { #: Restores the last committed version of all example files in this directory (leaves git index, README, run)
  cmd git checkout -- 'someapp_*'
  cmd git clean -f 'someapp_*'
}

function all { # [...args]: Reruns the full example suite
  for format in "${formats[@]}"; do
    all-format "$format"
  done
}

function all-format { # <format> [...args]: Reruns the example suite for one sqlformat
  someapp-clean-format "$1"
  someapp-build "$@"
  echo "------"
  someapp-diff "$@"
  echo "------"
  init-db "$1"
  echo "------"
  someapp-load-v1 "$1"
  echo "------"
  someapp-load-v2 "$1"
  echo "------"
  someapp-extract "$@"
  echo "------"
  someapp-diff-extract "$@"
}

function shell { # <format>: Opens a shell to the given example database
  "$1"/run shell "${@:2}"
}

main "$@"