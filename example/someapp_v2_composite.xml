<dbsteward>
  <database>
    <sqlFormat></sqlFormat>
    <role>
      <application>someapp</application>
      <owner>pgsql</owner>
      <replication>someapp_slony</replication>
      <readonly>someapp_readonly</readonly>
    </role>
  </database>
  <schema name="public" owner="ROLE_OWNER">
    <table name="sql_user" owner="ROLE_OWNER" primaryKey="user_id" slonyId="10">
      <tablePartition type="MODULO">
        <tablePartitionOption name="number" value="4"></tablePartitionOption>
        <tablePartitionOption name="column" value="user_id"></tablePartitionOption>
        <tablePartitionOption name="firstSlonyId" value="347"></tablePartitionOption>
        <tablePartitionOption name="lastSlonyId" value="350"></tablePartitionOption>
      </tablePartition>
      <column name="user_id" type="bigserial" null="true"></column>
      <column name="user_name" type="character varying(40)" null="true"></column>
      <column name="password" type="text" null="true"></column>
      <column name="email" type="text" null="true"></column>
      <column name="somecol1" type="text" null="true" oldColumnName="somecol"></column>
      <column name="import_id" type="character varying(32)" null="true"></column>
      <column name="register_date" type="timestamp with time zone" null="true"></column>
      <column name="user_status_list_id" null="true" foreignSchema="public" foreignTable="user_status_list" foreignColumn="user_status_list_id"></column>
      <column name="user_access_level_id" null="false" default="1" foreignSchema="public" foreignTable="user_access_level" foreignColumn="user_access_level_id"></column>
      <grant role="ROLE_APPLICATION" operation="SELECT,UPDATE,DELETE,INSERT"></grant>
      <rows columns="user_id, user_name, password, user_status_list_id, import_id, register_date">
        <row>
          <col>1</col>
          <col>someapp_admin</col>
          <col>7c6a180b36896a0a8c02787eeafb0e4c</col>
          <col>3</col>
          <col>DEFAULT_USER</col>
          <col sql="true">NOW()</col>
        </row>
      </rows>
    </table>
    <table name="user_status_list" owner="ROLE_OWNER" primaryKey="user_status_list_id" slonyId="30">
      <column name="user_status_list_id" type="int" null="true"></column>
      <column name="is_visible" type="boolean" null="false" default="true"></column>
      <column name="can_login" type="boolean" null="false" default="true"></column>
      <column name="user_status" type="character varying(40)" null="false"></column>
      <grant role="ROLE_APPLICATION" operation="SELECT"></grant>
      <rows columns="user_status_list_id, user_status, is_visible, can_login">
        <row>
          <col>1</col>
          <col>Active</col>
          <col>true</col>
          <col>true</col>
        </row>
        <row>
          <col>2</col>
          <col>Inactive</col>
          <col>false</col>
          <col>true</col>
        </row>
        <row>
          <col>3</col>
          <col>Closed</col>
          <col>false</col>
          <col>false</col>
        </row>
      </rows>
    </table>
    <table name="user_access_level" owner="ROLE_OWNER" primaryKey="user_access_level_id" slonyId="40">
      <column name="user_access_level_id" type="int" null="true"></column>
      <column name="user_access_level" type="varchar(10)" null="false" default="true"></column>
      <column name="can_see_invisible_users" type="boolean" null="false" default="false"></column>
      <grant role="ROLE_APPLICATION" operation="SELECT"></grant>
      <rows columns="user_access_level_id, user_access_level, can_see_invisible_users">
        <row>
          <col>1</col>
          <col>User</col>
          <col>false</col>
        </row>
        <row>
          <col>10</col>
          <col>Moderator</col>
          <col>false</col>
        </row>
        <row>
          <col>50</col>
          <col>Admin</col>
          <col>true</col>
        </row>
      </rows>
    </table>
    <table name="session_information" description="Information regarding a user&#39;s current session" owner="ROLE_OWNER" primaryKey="session_id" slonyId="20">
      <column name="session_id" type="varchar(255)" null="false"></column>
      <column name="user_id" null="true" foreignSchema="public" foreignTable="sql_user" foreignColumn="user_id"></column>
      <column name="login_time" type="timestamp with time zone" null="true"></column>
      <column name="logout_time" type="timestamp with time zone" null="true"></column>
      <column name="last_active_time" type="timestamp with time zone" null="true"></column>
      <column name="ip" type="inet" null="true"></column>
      <column name="page" type="varchar(40)" null="true"></column>
      <column name="start_time" type="timestamp with time zone" null="true"></column>
      <column name="last_time" type="timestamp with time zone" null="true"></column>
      <column name="data" type="text" null="true"></column>
      <grant role="ROLE_APPLICATION" operation="ALL"></grant>
    </table>
    <table name="group_list" owner="ROLE_OWNER" primaryKey="group_list_id" slonyId="3">
      <column name="group_list_id" type="bigserial" null="true"></column>
      <column name="group_create_time" type="timestamp with time zone" null="false"></column>
      <column name="group_description" type="text" null="false" description="type text and not null in v2"></column>
      <column name="group_name" type="character varying(50)" null="true"></column>
      <column name="group_permission" type="boolean" null="true" default="true"></column>
      <column name="group_deleted" type="boolean" null="true" default="false"></column>
      <column name="group_visible" type="boolean" null="true" default="TRUE" description="new in v2"></column>
      <grant role="ROLE_APPLICATION" operation="SELECT,INSERT,UPDATE"></grant>
    </table>
    <grant role="ROLE_APPLICATION" operation="USAGE"></grant>
    <function name="destroy_session" owner="ROLE_OWNER" description="Deletes session data from the database" returns="VOID">
      <functionParameter type="character varying"></functionParameter>
      <functionDefinition sqlFormat="pgsql8" language="sql"><![CDATA[
        DELETE FROM session_information WHERE session_id=$1;
      ]]></functionDefinition>
      <grant role="ROLE_APPLICATION" operation="EXECUTE"></grant>
    </function>
    <trigger name="user_audit" table="sql_user" event="INSERT" when="BEFORE" forEach="" function="EXECUTE xyz" sqlFormat="mysql5"></trigger>
    <trigger name="sql_user_part_trg" table="sql_user" event="INSERT" when="BEFORE" forEach="ROW" function="_p_public_sql_user.insert_trigger()" sqlFormat="pgsql8"></trigger>
    <view name="group_list_view" owner="ROLE_OWNER">
      <grant role="ROLE_APPLICATION" operation="SELECT"></grant>
      <viewQuery sqlFormat="pgsql8"><![CDATA[SELECT * FROM public.group_list WHERE group_deleted = FALSE AND group_visible = TRUE]]></viewQuery>
      <viewQuery sqlFormat="mssql10"><![CDATA[SELECT * FROM dbo.group_list WHERE group_deleted = 'f' AND group_visible = 't']]></viewQuery>
    </view>
  </schema>
  <schema name="search_results" owner="ROLE_OWNER">
    <grant role="ROLE_APPLICATION" operation="ALL,CREATE TABLE,ALTER"></grant>
    <sequence name="result_tables_unique_id_seq" owner="ROLE_OWNER" cache="1" start="1" max="99999" inc="1" cycle="true" slonyId="346">
      <grant role="ROLE_APPLICATION" operation="USAGE,SELECT,UPDATE"></grant>
    </sequence>
  </schema>
  <schema name="_p_public_sql_user">
    <table name="partition_0" owner="ROLE_OWNER" primaryKey="user_id" inheritsTable="sql_user" inheritsSchema="public" slonyId="347">
      <foreignKey columns="user_status_list_id" foreignSchema="public" foreignTable="user_status_list" foreignColumns="user_status_list_id" constraintName="p0_user_status_list_id_fk"></foreignKey>
      <foreignKey columns="user_access_level_id" foreignSchema="public" foreignTable="user_access_level" foreignColumns="user_access_level_id" constraintName="p0_user_access_level_id_fk"></foreignKey>
      <index name="user_name_p0" using="btree">
        <indexDimension name="user_name1">user_name</indexDimension>
      </index>
      <constraint name="sql_user_p_0_chk" type="CHECK" definition="((user_id % 4) = 0)"></constraint>
      <grant role="ROLE_APPLICATION" operation="SELECT,UPDATE,DELETE,INSERT"></grant>
    </table>
    <table name="partition_1" owner="ROLE_OWNER" primaryKey="user_id" inheritsTable="sql_user" inheritsSchema="public" slonyId="348">
      <foreignKey columns="user_status_list_id" foreignSchema="public" foreignTable="user_status_list" foreignColumns="user_status_list_id" constraintName="p1_user_status_list_id_fk"></foreignKey>
      <foreignKey columns="user_access_level_id" foreignSchema="public" foreignTable="user_access_level" foreignColumns="user_access_level_id" constraintName="p1_user_access_level_id_fk"></foreignKey>
      <index name="user_name_p1" using="btree">
        <indexDimension name="user_name1">user_name</indexDimension>
      </index>
      <constraint name="sql_user_p_1_chk" type="CHECK" definition="((user_id % 4) = 1)"></constraint>
      <grant role="ROLE_APPLICATION" operation="SELECT,UPDATE,DELETE,INSERT"></grant>
    </table>
    <table name="partition_2" owner="ROLE_OWNER" primaryKey="user_id" inheritsTable="sql_user" inheritsSchema="public" slonyId="349">
      <foreignKey columns="user_status_list_id" foreignSchema="public" foreignTable="user_status_list" foreignColumns="user_status_list_id" constraintName="p2_user_status_list_id_fk"></foreignKey>
      <foreignKey columns="user_access_level_id" foreignSchema="public" foreignTable="user_access_level" foreignColumns="user_access_level_id" constraintName="p2_user_access_level_id_fk"></foreignKey>
      <index name="user_name_p2" using="btree">
        <indexDimension name="user_name1">user_name</indexDimension>
      </index>
      <constraint name="sql_user_p_2_chk" type="CHECK" definition="((user_id % 4) = 2)"></constraint>
      <grant role="ROLE_APPLICATION" operation="SELECT,UPDATE,DELETE,INSERT"></grant>
    </table>
    <table name="partition_3" owner="ROLE_OWNER" primaryKey="user_id" inheritsTable="sql_user" inheritsSchema="public" slonyId="350">
      <foreignKey columns="user_status_list_id" foreignSchema="public" foreignTable="user_status_list" foreignColumns="user_status_list_id" constraintName="p3_user_status_list_id_fk"></foreignKey>
      <foreignKey columns="user_access_level_id" foreignSchema="public" foreignTable="user_access_level" foreignColumns="user_access_level_id" constraintName="p3_user_access_level_id_fk"></foreignKey>
      <index name="user_name_p3" using="btree">
        <indexDimension name="user_name1">user_name</indexDimension>
      </index>
      <constraint name="sql_user_p_3_chk" type="CHECK" definition="((user_id % 4) = 3)"></constraint>
      <grant role="ROLE_APPLICATION" operation="SELECT,UPDATE,DELETE,INSERT"></grant>
    </table>
    <grant role="ROLE_APPLICATION" operation="USAGE"></grant>
    <function name="insert_trigger" owner="ROLE_OWNER" description="DBSteward auto-generated for table partition of public.sql_user" returns="TRIGGER">
      <functionDefinition sqlFormat="pgsql8" language="plpgsql"><![CDATA[DECLARE
	mod_result INT;
BEGIN
	mod_result := NEW.user_id % 4;
	IF (mod_result = 0) THEN
		INSERT INTO _p_public_sql_user.partition_0 VALUES (NEW.*);
	ELSEIF (mod_result = 1) THEN
		INSERT INTO _p_public_sql_user.partition_1 VALUES (NEW.*);
	ELSEIF (mod_result = 2) THEN
		INSERT INTO _p_public_sql_user.partition_2 VALUES (NEW.*);
	ELSEIF (mod_result = 3) THEN
		INSERT INTO _p_public_sql_user.partition_3 VALUES (NEW.*);
	END IF;
	RETURN NULL;
END;]]></functionDefinition>
      <grant role="ROLE_APPLICATION" operation="EXECUTE"></grant>
    </function>
  </schema>
</dbsteward>